{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","placeholder","onClick","toggleMode","htmlFor","TextForm","useState","Text","setText","style","color","heading","backgroundColor","onChange","event","target","value","rows","disabled","length","newText","toUpperCase","showalert","toLowerCase","capitalStr","replace","c","navigator","clipboard","writeText","text","split","join","filter","element","defaultProps","AboutText","Alert","alert","role","msg","About","App","Mode","setMode","setalert","message","setTimeout","document","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9797be05.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\" >{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">About</Link>\r\n                    </li>\r\n                    </ul>\r\n                    <form className=\"d-flex\">\r\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                    <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form>\r\n                    <div className={`form-check form-switch mx-3 my-3 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input onClick={props.toggleMode} className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </nav>\r\n    )\r\n}\r\nNavbar.propTypes = {title: PropTypes.string, AboutText: PropTypes.string};\r\nNavbar.defaultProps = { title: \"Enter the title\", AboutText: \"Enter About Text\"};","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const uppercasefun = ()=>{\r\n        let newText = Text.toUpperCase();\r\n        setText(newText);\r\n        props.showalert(\"Converted To UpperCase\", \"SUCCESS\");\r\n    }\r\n    const lowercasefun = ()=>{\r\n        let newText = Text.toLowerCase();\r\n        setText(newText);\r\n        props.showalert(\"Converted To LowerCase\", \"SUCCESS\");\r\n    }\r\n    const Capatalizefun = ()=>{\r\n        const phrase = Text.toLowerCase();\r\n        const capitalStr = phrase.replace(/\\b\\w/g, function(c) {\r\n            return c.toUpperCase();\r\n        });\r\n        let newText =  capitalStr\r\n        setText(newText)\r\n        props.showalert(\"Converted To Capatalize\", \"SUCCESS\");\r\n    }\r\n    const Clearfun = ()=>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showalert(\"Text Cleared\", \"SUCCESS\");\r\n    }\r\n    const copyfun = ()=> {\r\n        navigator.clipboard.writeText(Text);\r\n        props.showalert(\"Text Copied\", \"SUCCESS\");\r\n    }\r\n    const ExtraFun = ()=> {\r\n        let text = Text.split(/[ ]+/);\r\n        setText (text.join(\" \"));\r\n        props.showalert(\"Extra Space removed\", \"SUCCESS\");\r\n    }\r\n    const valueChanged = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n    const [Text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode === 'light' ? 'black' : 'white'}}>\r\n                <h3 className=\"text-center\">{props.heading}</h3>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" style={{backgroundColor: props.mode === 'light' ? 'white' : '#042743', color: props.mode === 'light' ? 'black' : 'white'}}id=\"MyBox\" onChange={valueChanged} value={Text}   rows=\"10\">setText</textarea>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <button disabled={Text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={uppercasefun}>UpperCase</button>\r\n                    <button disabled={Text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={lowercasefun}>LowerCase</button>\r\n                    <button disabled={Text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={Capatalizefun}>Capatalize</button>\r\n                    <button disabled={Text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={Clearfun}>Clear</button>\r\n                    <button disabled={Text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={copyfun}>Copy to Clipboard</button>\r\n                    <button disabled={Text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={ExtraFun}>Remove Extra Space</button>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: (props.mode === 'light' ? 'black' : 'white')}}>\r\n                <h3>Text Analysis</h3>\r\n                <h5>Words: {Text.split(/\\s+/).filter((element)=>{return element.length!==0}).length}</h5>\r\n                <h5>Characters: {Text.length}</h5>\r\n                <h5>Reading Time (average speed): {0.008 * Text.split(\" \").length} Minutes</h5>\r\n            </div>\r\n            <div className=\"container\" style={{color: (props.mode === 'light' ? 'black' : 'white')}}>\r\n                <h3>Preview Your Text</h3>\r\n                <p>{Text.length>0? Text:'Enter Something to preview it here on Text Utils'}</p>\r\n            </div>\r\n                \r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert&&<div className={`alert alert-success alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.type}</strong> {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div className=\"container\"  style={{backgroundColor: props.mode === 'light' ? 'white' : '#042743', color: props.mode === 'light' ? 'black' : 'white'}}>\r\n            <h2 className=\"my-3\">About us</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={{backgroundColor: props.mode === 'light' ? 'white' : '#042743', color: props.mode === 'light' ? 'black' : 'white'}}>\r\n                        About Text Utils App\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={{backgroundColor: props.mode === 'light' ? 'white' : '#042743', color: props.mode === 'light' ? 'black' : 'white'}}>\r\n                        <strong>Text utils app is a Text Manipulating app</strong> Text utils app is a app that can change your given text into upeercase, lowercase, capatalize, remove extra sapace and you can also copy your finaql text with just a click, it can also cound number of words and character used in your text and can also cound average time to read your text. This website has both the mode Dark mode and light mode you can easily switch as your requirement.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" >\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\"  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={{backgroundColor: props.mode === 'light' ? 'white' : '#042743', color: props.mode === 'light' ? 'black' : 'white'}}>\r\n                        About The developer\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={{backgroundColor: props.mode === 'light' ? 'white' : '#042743', color: props.mode === 'light' ? 'black' : 'white'}}>\r\n                        <strong>A.S. Developers | Askand Singh</strong> Askand singh is the developer of this website, Askand Was a student of class 7 in City Montessori school Lucknow Mahanagar  \r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" >\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={{backgroundColor: props.mode === 'light' ? 'white' : '#042743', color: props.mode === 'light' ? 'black' : 'white'}}>\r\n                        Lorem Ipsum\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={{backgroundColor: props.mode === 'light' ? 'white' : '#042743', color: props.mode === 'light' ? 'black' : 'white'}}>\r\n                        <strong>Loooorem Ipppppsum </strong> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert';\nimport About from './Components/About';\nimport { HashRouter as Router,Switch, Route,} from \"react-router-dom\";\n\n\nfunction App() {\n  const [Mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n  let showalert = (message, type)=>{\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 1500);\n  }\n  const toggleMode = ()=> {\n    if(Mode === 'light' ){\n      setMode('dark');\n      document.body.style.backgroundColor = \"#042743\";\n      showalert(\"Dark Mode is Enabled\", \"SUCCESS\")\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showalert(\"Light Mode is Enabled\", \"SUCCESS\")\n    }\n  }\n  return (\n    <>\n      <Router>\n        <Navbar title=\"Text Utils\" AboutText=\"About US!\" mode={Mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        <div className=\"container my-3  \">\n        <Switch>\n            <Route path=\"/about\">\n              <About mode={Mode}/>\n            </Route>\n            <Route path=\"/\">\n              <TextForm showalert={showalert} heading=\"Text Utils | Word Counter | Character counter | upercase | LowerCase | remove Extra space\" mode={Mode}/>\n            </Route>\n        </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}